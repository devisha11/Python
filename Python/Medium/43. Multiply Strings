/*  Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string. 
  
 Note: You must not use any built-in BigInteger library or convert the inputs to integer directly. 
  
   
 Example 1: 
 Input: num1 = "2", num2 = "3" 
 Output: "6" 
  
 Example 2: 
 Input: num1 = "123", num2 = "456" 
 Output: "56088" 
   
  
 Constraints: 
 1 <= num1.length, num2.length <= 200 
 num1 and num2 consist of digits only. 
 Both num1 and num2 do not contain any leading zero, except the number 0 itself. */ 
  
  
 Code: 
 class Solution: 
     def multiply(self, num1: str, num2: str) -> str: 
         m = { 
             "0":0,"1":1,"2":2,"3":3,"4":4, 
             "5":5,"6":6,"7":7,"8":8,"9":9 
         } 
         if num1=="0" or num2=="0": 
             return "0" 
         key="" 
         n1=m[num1[0]] 
         n2=m[num2[0]] 
  
         for i in range(1,len(num1)): 
             n1=m[num1[i]] + (n1*10) 
  
         for i in range(1,len(num2)): 
             n2=m[num2[i]] + (n2*10) 
  
         return str(n1*n2)